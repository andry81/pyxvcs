2020.01.01:
* new: load configuration files from local directory declared in the `LOCAL_CONFIG_DIR_NAME` environment variable
* new: extracted `configure.vars.*` script to separately generate `config.vars` file has used in other configurations scripts
* changed: moved the root configuration files into a local directory
* changed: readme update

2019.12.31:
* fixed: configure script execution
* new: vcs command scripts generator in `configure.*` script
* changed: command scripts is removed because now can be generated by the `configure.*` script from template files using previously generated `config.private.yaml` configuration file
* changed: readme file

2019.12.31:
* new: readme file
* changed: entire project is copied into a standalone repository, all template files is resetted to an example state

2019.12.30:
* changed: readme update

2019.12.30:
* changed: minor changes

2019.12.30:
* new: cmdoplib: added `retain_commmit_git_svn_parents` parameter to the `push_svn_to_git` function to explicitly set the `git svn fetch ...` command commits as parents to a resulted merge commit (by default is turned off to reduce quantity of commits in a repository commits graph)
* new: added `--retain_commmit_git_svn_parents` parameter to the `cmdop.xsh` script

2019.12.29:
* fixed: `cmdop.xpy` execution from the root directory
* new: added more projects
* refactor: cmdoplib: minor refactor

2019.12.26:
* fixed: cmdoplib: missed local branch cleanup before `git svn fetch ...` (a local branch can contain empty commits after the last `git filter-branch --prune-empty` command)

2019.12.25:
* fixed: cmdoplib: declare a preserve empty directories in the `git_init` function, added support for respective `*GIT_SVN_REMOTE.PRESERVE_EMPTY_DIRS*` variables in yaml scripts
* fixed: cmdoplib: in the git a child repository branch must be always merged into a parent repository even if was merged for a previous svn revision(s), otherwise a parent repository commit won't contain changes made in a child repository in previous svn revisions
* fixed: cmdoplib: use a commit timestamp in the `--until`/`--since` argument in a  `git log ...` command, but return an author timestamp and datetime
* fixed: cmdoplib: missed to recreate a main branch after a branch rewrite (`git filter-branch --prune-empty` command) in case when the `refs/original/refs/remotes/...` reference was deleting but the reference of a main branch was pointing to the being deleted reference
* fixed: cmdoplib: other multiple fixups
* fixed: unsafe known/unknown arguments intersection check in the `cmdop.xsh` script
* new: cmdoplib: [initiated] `git_svn_compare_commits` function and respective functionality to compare a particular svn commit versus associated git commit for a particular git repository associated with a remote name
* new: `*~compare_commits.bat` scripts to call the `git_svn_compare_commits` function

2019.12.24:
* fixed: cmdoplib: minor fixup

2019.12.23:
* fixed: cmdoplib: The `-no-ff` parameter in the `git merge ...` command should not be used in case of merge into empty head, otherwise `fatal: Non-fast-forward commit does not make sense into an empty head`

2019.12.23:
* fixed: tacklelib: minor `TmpFileIO` class fixups
* fixed: tacklelib: minor `devnull` class fixup
* fixed: cmdoplib: workaround for the `plumbum.local.run` function for `TmpFileIO` object as a stdin
* fixed: cmdoplib: invalid author date/time in `git_push_from_svn` function
* fixed: cmdoplib: other multiple fixups
* refactor: cmdoplib: removed unnecessary default keyword parameters from `call*`/`call_svn*`/`call_git*` functions

2019.12.22:
* fixed: cmdoplib: case around the `error: Entry '<prefix>/...' overlaps with '<prefix>/...'.  Cannot bind.` message after the `git read-tree --prefix=...` command
* fixed: cmdoplib: missed commit message `git-svn-id` field change after merge from a child repository commit to a parent repository
* fixed: cmdoplib: missed to commit changes in a not root repository in case if a not root repository has changes for a revision together with a child repository
* fixed: cmdoplib: other multiple fixups
* new: cmdoplib: `stdin` parameter in `call` function
* new: cmdoplib: `**kwargs` parameter in `call_svn`/`call_git` functions

2019.12.18:
* fixed: cmdoplib: missed git switch with checkout (not initialized HEAD) after a call to `git_pull`/`git_push_from_svn` functions
* fixed: cmdoplib: workaround call to the `git filter-branch --prune-empty ...` without initialized HEAD reference (error message `fatal: Needed a single revision`)
* fixed: cmdoplib: other multiple fixups

2019.12.17:
* fixed: cmdoplib: multiple fixup
* new: cmdoplib: `set_verbosity_level` function and respective `cmdop.xpy` script parameter to reduce a verbosity level by default (hide an environment variables output attached to a being runned executable)
* new: cmdoplib: explicit environment dictionary parameter in the `call`/`call_svn`/`call_git` functions
* changed: cmdoplib: removed svn cache remove from all functions except in the `git_reset` function if the `--remove_svn_on_reset` flag is set

2019.12.16:
* refactor: cmdoplib: minor refactor

2019.12.11:
* fixed: cmdoplib: incorrect git-svn-trunk branch fetch from the previous revision instead of from the first revision, as a result is incorrect commit-to-commit concatenation after a criss-cross repository synchronization in another project

2019.12.11:
* fixed: cmdoplib: commit timestamp has used instead of author timestamp
* fixed: cmdoplib: minor fixes
* fixed: minor fixes

2019.12.11:
* changed: cmdoplib: [completed] `git_push_from_svn` function

2019.12.09:
* fixed: cmdoplib: `git pull ...` command can not handle multiple merge into the index file, throws error message `error: You have not concluded your merge (MERGE_HEAD exists).`, has replaced by the `git subtree add ...`/`git subtree merge ...` command
* fixed: cmdoplib: `git subtree add ...` command can not handle multiple merge into the index file, throws error message `Working tree has modifications.  Cannot add.`, has moved before a parent repository merge command
* fixed: cmdoplib: `git subtree merge ...` command can not handle multiple merge into the index file, throws error message `Working tree has modifications.  Cannot add.`, has replaced by the `git merge --no-commit -s ours ...` + `git read-tree ...` + `git commit -C ...`
* changed: cmdoplib: [continued] `git_push_from_svn` function

2019.12.08:
* fixed: cmdoplib: `git cherry-pick ...` command can not handle a subtree prefix and merges all commits into the root directory of a commit, has replaced by the `git read-tree ...` command
* fixed: cmdoplib: `git read-tree ...` command can not handle multiple merge into the index file, throws error message `error: Entry '...' overlaps with '...'.  Cannot bind.`, has replaced by the `git pull ...` command
* fixed: cmdoplib: `git_push_from_svn` function error message `fatal: cannot switch branch while merging`, added `git reset --mixed` to cleanup before the switch
* changed: cmdoplib: [continued] `git_push_from_svn` function

2019.12.06:
* changed: cmdoplib: [continued] `git_push_from_svn` function

2019.12.05:
* fixed: configure: missed `config.env.yaml` generation

2019.12.04:
* changed: removed `parent_git_subtree_cmdline` and `git_subtree_cmdline` from `git_repos.lst` as not required anymore (`git subtree ...` command is not used anymore)
* changed: cmdoplib: removed usage of `parent_git_subtree_cmdline` and `git_subtree_cmdline` parameters in `GitReposListReader` class
* changed: cmdoplib: [continued] `git_push_from_svn` function
* refactor: cmdoplib: git functions refactor

2019.11.27:
* fixed: cmdoplib: added '--localtime' to all `git svn fetch ...` commands
* changed: cmdoplib: [continued] `git_push_from_svn` function

2019.11.27:
* fixed: cmdoplib: correct `git cherry-pick ...` calls

2019.11.26:
* fixed: cmdoplib: has used git commit timestamp/datetime in comparison instead of associated svn commit timestamp/datetime
* fixed: cmdoplib: correct skip push of empty svn commits
* fixed: cmdoplib: stop on a not critical warning from `git svn fetch ...` command
* fixed: cmdoplib: missed `--no-edit` in the `git commit --amend ...` command
* fixed: cmdoplib: fetch-rebase-push into git repo in the `git_push_from_svn` function
* fixed: cmdoplib: minor fixup
* changed: cmdoplib: [continued] `git_push_from_svn` function
* refactor: cmdoplib: minor refactor

2019.11.25:
* fixed: cmdoplib: minor fixup
* new: cmdoplib: change author name and email before push

2019.11.25:
* fixed: removed user name from git repo path to avoid the git credential issue in the bitbucket server

2019.11.25:
* fixed: cmdoplib: fixup to init/fetch/reset/pull/push over empty git repository
* changed: cmdoplib: [continued] `git_push_from_svn` function

2019.11.24:
* new: tacklelib: reimport functionality in the `tkl_import_module` function to partially resolve module cross references
* changed: cmdoplib: `yaml_expand_*` functions always searches in python global variables now
* changed: cmdoplib: [continued] `git_push_from_svn` function
* refactor: minor refactor

2019.11.24:
* fixed: cmdoplib: now a project checks whether a command file exists (without extension) to run a command
* fixed: cmdoplib: minor fixup
* new: added `tacklelib--3dparty`, `tacklelib--3dparty--p7client`, `tacklelib--3dparty--fmt`, `tacklelib--3dparty--pystring` projects
* changed: cmdoplib: [continued] `git_push_from_svn` function

2019.11.23:
* fixed: cmdoplib: git-svn branch cleanup before fetch
* changed: cmdoplib: all branches started by `git-svn` is reserved for internal usage

2019.11.22:
* fixed: cmdoplib: not unique default fetch tip in to `config` file after the `git svn init ...` call
* fixed: cmdoplib: incomplete `--ignore-paths` parameter in the `git svn init ...` command
* fixed: cmdoplib: `git svn fetch ...` invalid (default is `master`) branch fetch, the `git swith ...` with explicit branch must be used always before to fix that
* changed: tacklelib,cmdoplib: increased stdout output maximal lines for a command before cutoff from 7 up to 9
* changed: readme update

2019.11.21:
* fixed: cmdoplib: `revert_if_git_head_refs_is_not_last_pushed` function fixup
* fixed: cmdoplib: `git_fetch`, `git_pull`, `git_push_from_svn` functions fixup
* changed: cmdoplib: [continued] `git_push_from_svn` function
* refactor: cmdoplib: removed the stdout/stderr parameters from the `call_svn` and `call_git` functions as must always does intercept the output

2019.11.20:
* fixed: tacklelib,cmdoplib: missed yaml changes
* fixed: cmdoplib: call to `git_push_from_svn` immediately after clean `git_init`
* fixed: exception around an environment variable deletion after the configure script run
* changed: added author and author email in `svn log ...` command output

2019.11.20:
* changed: cmdoplib: [continued] `git_push_from_svn` function
* changed: readme update

2019.11.19:
* new: `tzlocal` python module added to python modules install script
* changed: use local time in `svn log ...` commands
* changed: cmdoplib: [continued] `git_push_from_svn` function
* refactor: cmdoplib: minor refactor

2019.11.18:
* fixed: cmdoplib: [continued] `git_push_from_svn` function fixup
* refactor: minor refactor

2019.11.18:
* changed: cmdoplib: [continued] `git_push_from_svn` function

2019.11.17:
* fixed: install script missed modules

2019.11.17:
* changed: readme update

2019.11.14:
* changed: cmdoplib: dropped `globals()[...]` usage to access global variables as not required anymore and is replaced by `tkl_declare_global` function usage

2019.11.14:
* fixed: tacklelib: avoid copy builtin and packaged modules
* fixed: tacklelib: avoid copy builtin and non trivial class types
* fixed: tacklelib: `inspect.getmodule` is replaced by `tkl_get_imported_module_by_file_path` to correctly return modules by a stack module path (unique relation) instead by a module name from `sys.modules` (not unique relation)
* changed: python modules install script update
* refactor: `tkl_import_module` function reduction
* refactor: code cleanup

2019.11.12:
* fixed: cmdoplib: removed `svn ...` commands stdout cutoff

2019.11.12:
* fixed: tacklelib: `tkl_merge_module` module-to-not-a-module copy
* fixed: tacklelib: invalid execution guard in the `tkl_import_module` function for named imports
* fixed: cmdoplib: `git svn ...` returns message affected by the `SVN_SSH` environment variable: `Can't create session: Unable to connect to a repository at URL 'svn+ssh://...': Error in child process: exec of '' failed: No such file or directory at .../Git/mingw64/share/perl5/Git/SVN.pm line 310.` (https://stackoverflow.com/questions/31443842/svn-hangs-on-checkout-in-windows/58613014#58613014 )
* fixed: cmdoplib: `git svn init ...` can init urls with the svn+ssh scheme (see details in the `README_EN.txt` file)
* new: tacklelib: new hierarchical print to introduce the nest level of an `tkl_import_module` call
* new: tacklelib: new `tkl_init` function implementation to initialize the caller/current module on the stack
* new: tacklelib: `tkl_import_module` function has been rewritten to use the stack to update globals everythere including a module from where an import being executed
* new: tacklelib: `tkl_declare_global` function has been rewritten to use the stack to update globals everythere including a module from where a global being exported from
* new: tacklelib: `YamlEnv` class supports hierarchical yaml configuration files to read variables with a compound nature to postpone an environment variable declaration to a moment of execution of an executable
* new: tacklelib: `tacklelib.sig.xsh` script to suppress signals to avoid accidental signal interruption in critical code segments
* new: tacklelib: `tacklelib.cache.xsh` script to wrap the `fcache` module to make workarounds over it (see details in the `README_EN.txt` file)
* new: cmdoplib: `yaml_load_config` function can load environment variables for a particular context (global/environment variables)
* new: cmdoplib: `yaml_expand_*` functions can expand for a different containers (str/list/dict/value) or use additional containers to search in for replacement values (at second in dictionary, at third in global variables)
* new: cmdoplib: support run `ssh-pageant` as a background process to enable access svn repositories through the svn+ssh protocol from the `git svn ...` command
* removed: tacklelib: `tkl_get_parent_imported_module_state` function is removed as not needed anymore because the search logic is based on the stack frames now
* changed: tacklelib: always export to all imported modules in the `tkl_declare_global` function
* changed: cmdoplib: `CONFIGURE_DIR`, `SCM_NAME` and `CMD_NAME` variables made global in all imported modules to be able to use them directly in command calls
* changed: cmdoplib: [continued] `git_push_from_svn` function
* changed: readme(s) update
* refactor: tacklelib,cmdoplib: yaml functionality
* refactor: cmdoplib: git/svn functionality

2019.10.30:
* fixed: cmdoplib: environment variable accidental double declare
* fixed: cmdoplib: missed `delvar` function refactor

2019.10.30:
* new: tacklelib: `tkl_declare_global` function can declare global in a child as a reference in the parent module/globals
* new: cmdoplib: print ignored errors at the end of the `git_relocate` function call
* new: `install_python_modules.bat` script to install all required python modules
* changed: readme update

2019.10.29:
* fixed: cmdoplib: exception from `svn_relocate` function on non critical error `svn: E155024: Invalid source URL prefix: 'https://' (does not overlap target's URL 'svn+ssh://...')`
* fixed: cmdoplib: SVN_SSH usage as an environment variable from the yaml configuration file
* fixed: cmdoplib: search svn url without scheme in the git-svn-id field from the git commit
* new: taklelib,cmdoplib: standalone yaml load into environment variables dictionary additionally to the global variables dictionary
* new: `config.env.yaml` to store environment variables, loads after global variables in the `config.yaml` but can reference the global variables for the expansion phase

2019.10.29:
* new: tacklelib: `OnExit` class to use as a RAII alternative in the python with the `with` statement
* new: cmdoplib: bare argument support for svn scripts
* new: svn relocate script
* changed: svn config switched onto svn+ssh protocol because of the sourceforge frequent returns of the `svn: E175002: Unexpected HTTP status 504 'Gateway time-out'` even on a simple `svn update` (https://sourceforge.net/p/forge/site-support/19726/ )
* changed: readme update

2019.10.29:
* changed: readme update

2019.10.28:
* changed: cmdoplib: [continued] `git_push_from_svn` function
* changed: cmdoplib: other minor changes and fixes

2019.10.27:
* changed: cmdoplib: [continued] `git_push_from_svn` function
* changed: cmdoplib: other minor changes and fixes
* refactor: cmdoplib: code reduction

2019.10.25:
* fixed: tacklelib: `tkl_classcopy` function issue around the error `TypeError: descriptor 'combine' for type 'datetime.datetime' doesn't apply to type 'datetime'`
* fixed: tacklelib: `tkl_merge_module` function issue around copy of a `datetime.datetime` variable from a module to a `datetime` variable
* changed: cmdoplib: [continued] `git_push_from_svn` function
* changed: cmdoplib: other minor changes and fixes
* refactor: cmdoplib: moved `import` statements after `tkl_import_module` calls
* refactor: cmdoplib: replaced all `import datetime` by `from datetime import datetime` to avoid errors around `datetime.*()` calls

2019.10.24:
* fixed: cmdoplib: minor fix with SVN repository uuid update
* changed: cmdoplib: [continued] `git_push_from_svn` function

2019.10.23:
* new: cmdoplib: `discover_executable` function to be able to override SVN/GIT executables either by respective environment variables (`SVN_EXEC`/`GIT_EXEC`) or by respective global variables (`SVN`/`GIT`)
* changed: cmdoplib: [continued] `git_push_from_svn` function
* changed: minor changes

2019.10.23:
* changed: cmdoplib: [continued] `git_push_from_svn` function
* changed: minor changes

2019.10.22:
* changed: cmdoplib: [continued] `git_push_from_svn` function
* changed: readme update

2019.10.22:
* changed: cmdoplib: [continued] `git_push_from_svn` function
* refactor: minor refactor

2019.10.21:
* fixed: cmdoplib: `git_push_from_svn` function execution
* changed: cmdoplib: [continued] `git_push_from_svn` function
* refactor: minor refactor

2019.10.18:
* new: cmdoplib: [initiated] `git_push_from_svn` function
* refactor: cmdoplib: `sync_svn_to_git` scripts renamed into `push_svn_to_git` to highlight the 1-way direction process (the `sync` basically associated with 2-way direction)

2019.10.17:
* fixed: tacklelib: stdout/stderr mix after a `tkl_import_module` call
* new: cmdoplib: complete `git_pull` function
* refactor: cmdoplib: minor refactor

2019.10.16:
* fixed: cmdoplib: added second revert after bad `git svn fetch ...` with the HEAD checkout 

2019.10.15:
* fixed: cmdoplib: HEAD revert, including HEAD reassign to the FETCH_HEAD and the reference list cleanup after a bad `git svn fetch ...` call
* fixed: cmdoplib: invalid remote-local reference search after the `git ls-remote ...` call
* fixed: cmdoplib: other minor fixes and improvements
* new: cmdoplib: `git_reset` function
* refactor: cmdoplib: minor refactor

2019.10.12:
* changed: drop the usage of the `--stdlayout` flag for the not root git repositories (subtree repositories)

2019.10.12:
* changed: cmdoplib: always use SVN repository root as a fetch base path, move a subdirectory reference into a particular fetch value in the `svn-remote.svn` config section, this would let the git to generate a commit hash based on a complete path from the SVN root
* refactor: cmdoplib: minor refactor

2019.10.11:
* fixed: cmdoplib: git config `svn-remove.svn` section records duplication on `git svn init ...` rerun
* fixed: cmdoplib: minor fixup

2019.10.11:
* fixed: cmdoplib: `git svn init ...` rerun in case of lack of network
* fixed: cmdoplib: `git svn init ...` invalid command line
* changed: cmdoplib: trailing not printable characters trim from the stdout/stderr

2019.10.10:
* fixed: cmdoplib: `--stdlayout` usage in the `git svn init ...` command
* changed: cmdoplib: `git_svn_init_cmdline` parameter moved into `git_repos.lst.in` file
* changed: cmdoplib: `git_subtree_cmdline` in the `git_repos.lst.in` splitted into `git_subtree_cmdline` and `parent_git_subtree_cmdline`

2019.10.10:
* changed: readmes update

2019.10.10:
* fixed: cmdoplib: `*.HUB_ROOT` and `*.WCROOT_DIR` variables proper check

2019.10.06:
* new: tackelib: `tacklelib.url.py` and `tacklelib.csv.py` scripts
* new: cmdoplib: `cmdoplib.url.xsh`, `cmdoplib.csv.xsh`, `cmdoplib.csvgit.xsh` and `cmdoplib.gitsvn.xsh` scripts (currently only `git_init` and `git_fetch` is implemented)
* fixed: tackelib: fixed class copy up on the `tkl_import_module` call
* fixed: tackelib: `SOURCE_DIR` and `SOURCE_FILE` builtin variables complete restore between calls
* changed: `exec_guards` function argument moved from the `tkl_source_module` into the `tkl_import_module` function to guard the execution on lowest level
* changed: readmes update
* refactor: global refactor

2019.09.25:
* new: cmdoplib: intermediate `git_pull` function

2019.09.22:
* new: tacklelib: `devnull` class
* new: cmdoplib: cmdoplib.git.xsh` script (git_init)
* changed: minor changes
* refactor: `repos.lst.in` renamed to `git_repos.lst.in`

2019.09.21:
* fixed: configure.bat
* changed: removed `__pycache__` directories generation

2019.09.21:
* new: svn update/checkout scripts conversion is completed

2019.09.07:
* new: [initiated] scripts conversion into the python scripts based on the plumbum module language
* changed: [important] aboarted scripts conversion into the python scripts based on the xonsh module language as not stable, not reliable and not complete:
** Gosh, too many issues not addressed to anyone! Authors has chosen to use it as a terminal language in the first place and does not consider to use it as a shell replacement. So many issues in the scripting area is still not resolved and authors are not interested to resolve them.
** Here is the list of the issues which I've got discovered just in the moment to begin a conversion (https://github.com/xonsh/xonsh/issues/created_by/andry81 ):
*** https://github.com/xonsh/xonsh/issues/3302 : "hangs around `source` operator"
*** https://github.com/xonsh/xonsh/issues/3301 : "`source` xsh file with try/except does hang"
*** https://github.com/xonsh/xonsh/issues/3299 : "hangs after `source` of a script which has been already sourced"
*** https://github.com/xonsh/xonsh/issues/3236 : "pipe from python function to an external executable does hang (Windows)"
*** https://github.com/xonsh/xonsh/issues/3202 : "`print` order broken while piping"
*** https://github.com/xonsh/xonsh/issues/3198 : "can not use log from xonsh on any arbitrary xonsh code"
*** https://github.com/xonsh/xonsh/issues/3197 : "raw strings still expands"
*** https://github.com/xonsh/xonsh/issues/3192 : "multiline python evaluation `@(...)` breaks the parser"
*** https://github.com/xonsh/xonsh/issues/3190 : "module `cmdix` executables is not visible from the python `Scripts` directory"
*** ... and others which I still consider as hindering issues to move to the xonsh language in the first place!

2019.09.01:
* fixed: multiple bug fixes and workarounds around xonsh scripts
* new: _common: rest of _common scripts ported to the python xonsh (`.xsh`)

2019.07.01:
* new: partially switched to the `python` 3.x with the modules: `xonsh` (unix shell like environment, `.xsh` scripts) + `cmdix` (unix core utils implemented in the python)
* new: `configure.xsh` script, calls from `configure.bat` interface scripts
* new: `README_EN.known_issues.txt` file for known issues around the scripts
* changed: partially disabled `configure.bat` script implementation (`configure.py.bat` script have has used instead)
* changed: inner xonsh piping functionality is not used because is not stable yet (see the `README_EN.known_issues.txt` for the details)
* changed: variables related to the python implementation extracted into `.yaml` configuration files (`repos.lst.in` files are left as is to the python csv parser)
* changed: readme update

2019.06.29:
* changed: all user scripts auto self logging
* changed: `configure_directory.bat` and `configure_project.bat` scripts merged into single `configure.bat` script
* refactor: `configure.bat` script

2019.06.27:
* new: log all output into local `.log` directory (`wtee.exe`, `get_datetime.bat`)
* refactor: standalone `BASE_SCRIPTS_ROOT` and `CONTOOLS_ROOT` variables
* refactor: configuration files load

2019.06.23:
* new: _common: `configure_directory.bat` script to configure directory of projects
* new: _common: `configure_project.bat` script to configure particular project
* changed: `configure.bat` changed to generate variables from `config.private.vars.in`/`config.vars.in` files
* changed: `configure.user.bat`/`configure_private.user.bat` replaced by `config.private.vars.in`/`config.vars.in` files
* refactor: reduced all `configure.private.bat`/`configure.bat` scripts
* refactor: minor refactor

2019.05.08:
* fixed: typo

2019.04.07:
* fixed: subtrees were involved in accidental merge with the parent, the `--ignore-paths` would be used to avoid any merge of unrelated histories in chain of parent-child trees

2019.02.28:
* minor fix

2019.02.25:
* changed: finished simplification of scripts

2019.02.24:
* changed: continue simplification of scripts

2019.02.23:
* changed: simplification of root scripts
* changed: readme update

2018.07.28:
* minor fixes and refactor

2018.07.28:
* new: changelog file
* changed: removed parent script exit on child script error
* changed: print scripts list at the end has exited with not zero return code
